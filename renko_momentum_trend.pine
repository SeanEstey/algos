/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Autoview scalping script based on Vdub Renko SniperVX1.
// Instructions:
//  1) Setup Autoview
//  2) Switch to 1m TF w/ Renko candles (requires Pro paid acct). Set Box Size to Traditional (not ATR) and manually test optimal value.
//  3) Add each of 4 alerts: Open Long, Close Long, Open Short, Close Short
// Suggestions: 
//      PAIR    BOX SIZE    TF
//      EURCAD  ???         1m
//      BTCUSD  50-100      1m
//      ETHUSD  1.0-3.0     1m
// MACD settings:
//      FAST    SLOW    PERIOD
//      3       10      16      (default)
//      12      26      9       (conventional)
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//@version=3
study(title="Renkonator 5000 [IND]", overlay=true)

//---------------------------------------------------------------------------------------------------------------------------------------------------
// Init
//---------------------------------------------------------------------------------------------------------------------------------------------------
m1          = input(title="From Month", defval=6, minval=1, maxval=12)              // Strat Backtest
d1          = input(title="From Day", defval=1, minval = 1, maxval=31)              // Strat Backtest
y1          = input(title="From Year", defval=2018, minval=2013)                    // Strat Backtest
m2          = input(title="To Month", defval=1, minval=1, maxval=12)                // Strat Backtest
d2          = input(title="To Day", defval=1, minval=1, maxval=31)                  // Strat Backtest
y2          = input(title="To Year", defval=9999, minval=2017)                      // Strat Backtest
t_start     = timestamp(y1, m1, d1, 00, 00)                                         // Strat Backtest
t_end       = timestamp(y2, m2, d2, 23, 59)                                         // Strat Backtest
src         = input(close, title="Renko Channel")                                   // Renko S/R
rst         = input(title='Renko Channel length', type=integer, defval=1)           // Renko S/R
macd_fast   = input(title="MACD Fast Length", defval=3)                             // MACD
macd_slow   = input(title="MACD Slow Length", defval=10)                            // MACD
macd_signal = input(title="MACD Signal Length", defval=16)                          // MACD
macd_histo_width = input(title="MACD Histogram Thickness", defval=5)                // MACD
factor      = input(1, minval=1,maxval = 1000, title="Trend Transition Signal")     // Signal 2
pd          = input(1, minval=1,maxval = 1000, title="Period")                      // Signal 2
hma_src     = input(close, title="Hull MA's Source:")                               // Hull MA
hma_slow_base_length = input(8, minval=1, title="HMA Slow Base Length:")            // Hull MA
hma_slow_length_scalar = input(5, minval=0, title="HMA Slow Length Scalar:")        // Hull MA
hma_fast_base_length = input(8, minval=1, title="HMA Fast Base Length:")            // Hull MA
hma_fast_length_scalar = input(1, minval=0, title="HMA Fast Length Scalar:")        // Hull MA
sl_pct      = input(title="Stop Loss Percent", defval=1.0, type=float)

// Functions
window()    => time >= t_start and time <= t_end ? true : false
hullma(src, length)=>wma(2*wma(src, length/2)-wma(src, length), round(sqrt(length)))

//---------------------------------------------------------------------------------------------------------------------------------------------------
// Signal Generation
//---------------------------------------------------------------------------------------------------------------------------------------------------
[_macd, _sig, _histo] = macd(close, macd_fast, macd_slow, macd_signal)              // MACD
macd_pos_up = _histo > _histo[1] and _histo > 0 ? _histo : na                       // MACD
macd_pos_down = _histo <= _histo[1] and _histo > 0 ? _histo : na                    // MACD
macd_neg_down = _histo < _histo[1] and _histo < 0 ? _histo : na                     // MACD
macd_neg_up = _histo >= _histo[1] and _histo < 0 ? _histo : na                      // MACD

last8h = highest(close, 13)                                                         // S/R
lastl8 = lowest(close, 13)                                                          // S/R
rstt = valuewhen(high >= highest(high, rst), high, 0)                               // S/R
rstb = valuewhen(low <= lowest(low, rst), low, 0)                                   // S/R
renko_top = last8h //last8h == nz(last8h[1]) ? last8h : na                          // S/R
renko_bot = lastl8 //lastl8 == nz(lastl8[1]) ? lastl8 : na                          // S/R

// Rajandran Supertrend (1==up, -1==down)
up = hl2 - (factor * atr(pd))                                                       // Trend
down = hl2 + (factor * atr(pd))                                                     // Trend
trend_up = na, trend_down = na, trend = na                                          // Trend
trend_up := close[1] > trend_up[1] ? max(up, trend_up[1]) : up                      // Trend
// trend_rev_up = trend == 1 and trend[1] == -1 ? 1 : na                            // Trend
trend_down := close[1] < trend_down[1] ? min(down, trend_down[1]) : down            // Trend
// trend_rev_down = trend == -1 and trend[1] == 1 ? -1 : na                         // Trend
trend := close > trend_down[1] ? 1 : close < trend_up[1] ? -1: nz(trend[1],0)       // Trend

hma_slow = hullma(hma_src, hma_slow_base_length + hma_slow_length_scalar * 6)       // Hull MA
hma_fast = hullma(hma_src, hma_fast_base_length + hma_fast_length_scalar * 6)       // Hull MA

//---------------------------------------------------------------------------------------------------------------------------------------------------
// Position Management
// Manually tracks long/short positions and stop losses (both unavailable in indicators)
//---------------------------------------------------------------------------------------------------------------------------------------------------
open_long=na, open_short=na, close_long=na, close_short=na, position=na, final_pos=na, flat=na, entry_price=na, stop=na
open_long := crossover(hma_fast, hma_slow) and macd_pos_up
close_long := low<=hma_slow or hma_fast[1]>=hma_fast
open_short := crossunder(hma_fast, hma_slow) and macd_neg_down
close_short := high>=hma_slow or hma_fast[1]<=hma_fast

position := open_long ? 1 : open_short ? -1 : (position[1]==1 and close_long) or (position[1]==-1 and close_short) ? 0 : position[1]
entry_price := position==1 and position[1]!=1 ? low : position==-1 and position[1]!=-1 ? high : entry_price[1]
stop := position[1]==1 and ((low - entry_price)/entry_price)*100 <= sl_pct*-1 ? true : position[1]==-1 and ((high - entry_price)/entry_price)*100 >= sl_pct ? true : false
final_pos := open_long ? 1 : open_short ? -1 : (position[1]==1 and close_long or stop) or (position[1]==-1 and close_short or stop) ? 0 : final_pos[1]

go_long_sig = open_long and window()
cl_long_sig = final_pos[1]==1 and final_pos==0 and window()
go_short_sig = open_short and window()
cl_short_sig = final_pos[1]==-1 and final_pos==0 and window()

//---------------------------------------------------------------------------------------------------------------------------------------------------
// Autoview Alerts
// IMPORTANT: Check alert expiration time regularly to monitor expiry dates.
// CMD      DESC        VALUES
// e        exchange    bitmex, okcoin, ...
// a        acct        name created for linked Autoview exchange
// s        symbol      xbtusd, ...
// b        book        long, short
// c        close       order, position
// t        type        market, limit, ...
// q        quantity    order size
// l        leverage    1-50
// Close all longs = e=okcoin s=butcusd3m c=position b=long
// Close all shorts = e=okcoin s=butcusd3m c=position b=short
//---------------------------------------------------------------------------------------------------------------------------------------------------
alertcondition(go_long_sig, title='Long Entry', message='e=bitmex-testnet a=testmex s=ethusd b=long t=market l=10 q=1000')
alertcondition(cl_long_sig, title='Long Exit', message='e=bitmex-testnet a=testmex s=ethusd c=position t=market')
alertcondition(go_short_sig, title='Short Entry', message='e=bitmex-testnet a=testmex s=ethusd b=short t=market l=10 q=1000')
alertcondition(cl_short_sig, title='Short Exit', message='e=bitmex-testnet a=testmex s=ethusd c=position t=market')

//---------------------------------------------------------------------------------------------------------------------------------------------------
// Plots & Styling
// Upblock: #b6d7a8, border: #6aa84f, Downblock: #ea9999f7, border: #e06666
//---------------------------------------------------------------------------------------------------------------------------------------------------

rt2 = plot(rstt, color = rstt != rstt[1] ? na : red, title="RT2", linewidth=1, offset=+0, editable=true)                                // S/R
rb2 = plot(rstb, color = rstb != rstb[1] ? na : green, title="RB2", linewidth=1, offset=0, editable=true)                               // S/R
ul2 = plot(renko_top, "Renko Channel Top", color=#e06666, linewidth=1, style=circles, transp=25)                                        // S/R
ll2 = plot(renko_bot, "Renko Channel Bot", color=#6aa84f, linewidth=1, style=circles, transp=25)                                        // S/R
fill(ul2, ll2, black, 95, "Renko Channel")                                                                                              // S/R
fill(ul2, rt2, red, 93, "Resistance Channel")                                                                                           // S/R
fill(ll2, rb2, green, 93, "Support Channel")                                                                                            // S/R

plot(hma_slow, "HMA Slow", color=orange, linewidth=2, transp=0)                                                                         // Hull MA
plot(hma_fast, "HMA Fast", color=teal, linewidth=2, transp=0)                                                                           // Hull MA

// plot(macd_pos_up, linewidth=macd_histo_width, color=teal, style=histogram, histbase=0.0)                                             // MACD
// plot(macd_pos_down, linewidth=macd_histo_width, color=teal, style=histogram, histbase=0.0, transp=85)                                // MACD
// plot(macd_neg_down, linewidth=macd_histo_width, color=red, style=histogram, histbase=0.0)                                            // MACD
// plot(macd_neg_up, linewidth=macd_histo_width, color=red, style=histogram, histbase=0.0, transp=85)                                   // MACD

// plotshape(ema_up, "Uptrend", shape.circle, location.belowbar, black, 50, 0, size=size.tiny)                                          // Trend
// plotshape(ema_down, "Downtrend", shape.circle, location.abovebar, black, 50, 0, size=size.tiny)                                      // Trend
// plotshape(trend_rev_up, "New Uptrend", shape.labelup, location.belowbar, fuchsia, 0, 0, size=size.tiny)                              // Trend
// plotshape(trend_rev_down, "New Downtrend", shape.labeldown, location.abovebar, fuchsia, 0, 0, size=size.tiny)                        // Trend

plotshape(go_long_sig, "Long Entry", shape.triangleup, location.belowbar, green, 0, 0, size=size.tiny, text="Long")                     // Positions
plotshape(cl_long_sig, "Long Exit", shape.triangleup, location.belowbar, green, 0, 0, size=size.tiny, text="Exit\nLong")                // Positions
plotshape(go_short_sig, "Short Entry", shape.triangledown, location.abovebar, red, 0, 0, size=size.tiny, text="Short")                  // Positions
plotshape(cl_short_sig, "Short Exit", shape.triangledown, location.abovebar, red, 0, 0, size=size.tiny, text="Exit\nShort")             // Positions
// plot(position, title="Position", color=black, transp=0)     
//plot(stop ? 1 : 0, title="Stop Loss", color=black, transp=0) 
